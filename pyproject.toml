[build-system]
requires = ["setuptools>=62.0", "wheel", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "low_cost_bnn"
description = "Bayesian network network architecture with efficient approximative training"
readme = "README.md"
requires-python = ">=3.9,<3.13"
license = {file = "LICENSE"}
keywords = ["machine learning", "Bayesian", "neural networks", "uncertainty", "epistemic", "aleatoric"]
authors = [
  {name = "Aaron Ho", email = "aaronkho@mit.edu" }
]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Developers",
  "Topic :: Scientific/Engineering",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dynamic = ["version"]

dependencies = [
  "pip",
  "psutil",
  "numpy<2.0.0",
  "scipy",
  "pandas",
  "tables",
  "scikit-learn",
  "optuna"
]

# For GPU support with TensorFlow, manually run the following commands in the virtual env
#pip install --no-cache-dir --extra-index-url https://pypi.nvidia.com tensorrt-libs
#pip install --no-cache-dir --extra-index-url https://pypi.nvidia.com tensorrt-bindings
#pip install --no-cache-dir --extra-index-url https://pypi.nvidia.com tensorrt

[project.optional-dependencies]
dev = ["pytest", "coverage"]
tf = ["tensorflow[and-cuda]==2.15.1", "tensorflow-probability==0.23.0", "onnx", "tf2onnx"]
torch = ["torch~=2.3", "onnx", "onnxscript"]

[project.urls]
"Homepage" = "https://github.com/aaronkho/low-cost-bnn"
"Bug Reports" = "https://github.com/aaronkho/low-cost-bnn/issues"
"Source" = "https://github.com/aaronkho/low-cost-bnn"

[project.scripts]
train_regressor_tensorflow = "low_cost_bnn.workflows.train_tensorflow_regressor:main"
train_classifier_tensorflow = "low_cost_bnn.workflows.train_tensorflow_classifier:main"
train_ncp_tensorflow = "low_cost_bnn.workflows.train_tensorflow_ncp:main"
train_evi_tensorflow = "low_cost_bnn.workflows.train_tensorflow_evi:main"
train_sngp_tensorflow = "low_cost_bnn.workflows.train_tensorflow_sngp:main"
train_regressor_pytorch = "low_cost_bnn.workflows.train_pytorch_regressor:main"
train_classifier_pytorch = "low_cost_bnn.workflows.train_pytorch_classifier:main"
train_ncp_pytorch = "low_cost_bnn.workflows.train_pytorch_ncp:main"
train_evi_pytorch = "low_cost_bnn.workflows.train_pytorch_evi:main"
train_sngp_pytorch = "low_cost_bnn.workflows.train_pytorch_sngp:main"
tune_ncp_tensorflow = "low_cost_bnn.workflows.tune_tensorflow_ncp:main"

[tool.setuptools.dynamic]
version = {attr = "low_cost_bnn.__version__"}

[tool.pixi.project]
channels = ["conda-forge"]
platforms = ["linux-64"]

[tool.pixi.pypi-options]
index-url = "https://pypi.org/simple"
#extra-index-urls = ["https://pypi.nvidia.com"]

[tool.pixi.dependencies]
# For usage with conda, pypi dependencies go in project.dependencies

[tool.pixi.environments]
default = {features = ["dev"], solve-group = "default"}
tf = {features = ["tf"], solve-group = "tf"}
torch = {features = ["torch"], solve-group = "torch"}

